{"version":3,"sources":["grid.module.css","svgs/Circle.js","svgs/Cross.js","Grid.js","PlayerInfo.js","App.js","index.js"],"names":["module","exports","Circle","props","size","width","height","viewBox","fill","xmlns","cx","cy","r","stroke","strokeWidth","Cross","d","strokeLinecap","Grid","divisions","positions","map","value","index","svg","isWinningIndex","winningIndexes","includes","className","styles","winner","key","onClick","setPositions","container","PlayerInfo","turn","App","React","useState","name","undefined","indexes","Array","data","setdata","console","log","prevData","forEach","line","a","b","c","ReactDom","render","document","getElementById"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,OAAS,uB,yGCYhDC,MAXf,SAAgBC,GACd,IAAMC,EAAOD,EAAMC,MAAQ,IAE3B,OACE,yBAAKC,MAAOD,EAAME,OAAQF,EAAMG,QAAQ,cAAcC,KAAK,OAAOC,MAAM,8BAC5E,4BAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKC,OAAO,QAAQC,YAAY,SCI3CC,MATf,SAAeZ,GACb,IAAMC,EAAOD,EAAMC,MAAQ,IAC3B,OACE,yBAAKC,MAAOD,EAAME,OAAQF,EAAMG,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BACtE,0BAAMO,EAAE,gEAAgEH,OAAO,QAAQC,YAAY,KAAKG,cAAc,YC+B3GC,MAtBf,SAAcf,GACZ,IAAMgB,EAAYhB,EAAMiB,UAAUC,KAAI,SAACC,EAAOC,GAC5C,IAZcC,EAYRC,EAAiBtB,EAAMuB,eAAeC,SAASJ,GAErD,OACE,yBACCK,UAAaH,EAAiBI,IAAOC,OAAS,KAC9CC,IAAOR,EACPS,QAAW,WACV7B,EAAM8B,aAAaV,KAlBd,WADKC,EAqBCF,GAnBR,kBAAC,EAAD,CAAOlB,KAAM,KACJ,WAARoB,EACD,kBAAC,EAAD,CAAQpB,KAAM,KAEd,SAmBT,OACE,yBAAKwB,UAAWC,IAAOK,WACrBf,ICxBSgB,MANf,SAAoBhC,GAGlB,OAFgBA,EAAM2B,OAAS,uCAAa3B,EAAM2B,QAAiB,qCAAW3B,EAAMiC,OCqDvEC,MApDf,SAAalC,GAAQ,IAAD,EACMmC,IAAMC,SAAS,CACrCT,OAAQ,CACNU,UAAMC,EACNC,QAAS,IAEXN,KAAO,QACPhB,UAAW,IAAIuB,MAAM,GAAGnC,KAAK,QAPb,mBACXoC,EADW,KACLC,EADK,KAUlB,OADFC,QAAQC,IAAIH,GAEV,oCACA,kBAAC,EAAD,CACElB,eAAkBkB,EAAKd,OAAOY,QAC9BtB,UAAawB,EAAKxB,UACpBa,aAAgB,SAAAV,GACZsB,GAAQ,SAAAG,GACN,GAAIA,EAAS5B,UAAUG,IAAWyB,EAASlB,OAAOU,KA0BlD,OAAOQ,EAzBP,IAAMJ,EAAI,eAAOI,GACjBJ,EAAKxB,UAAUG,GAASqB,EAAKR,KAqB7B,MApBc,CACZ,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAEDa,SAAQ,SAAAC,GAAS,IAAD,cACHA,EADG,GACbC,EADa,KACXC,EADW,KACRC,EADQ,KAEjBT,EAAKxB,UAAU+B,IAChBP,EAAKxB,UAAU+B,KAAOP,EAAKxB,UAAUgC,IACrCR,EAAKxB,UAAU+B,KAAOP,EAAKxB,UAAUiC,KACnCT,EAAKd,OAAOU,KAAOI,EAAKR,KACxBQ,EAAKd,OAAOY,QAAUQ,MAG5BN,EAAKR,KAAsB,UAAdQ,EAAKR,KAAoB,SAAW,QAC1CQ,QAQb,kBAAC,EAAD,CAAYR,KAAOQ,EAAKR,KAAMN,OAASc,EAAKd,OAAOU,SChDrDc,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.6c93ab8b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"grid_container__3Ms7-\",\"winner\":\"grid_winner__BjrIm\"};","import React from 'react';\n\nfunction Circle(props){\n  const size = props.size || 100\n  \n  return(\n    <svg width={size} height={size} viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<circle cx=\"50\" cy=\"50\" r=\"45\" stroke=\"black\" strokeWidth=\"10\"/>\n</svg>\n\n  );\n}\n\nexport default Circle;","import React from 'react';\n\nfunction Cross(props) {\n  const size = props.size || 100\n  return(\n    <svg width={size} height={size} viewBox=\"0 0 94 85\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M5 5C37.804 34.2893 89 80 89 80M89 5C89 5 37.804 50.7107 5 80\" stroke=\"black\" strokeWidth=\"10\" strokeLinecap=\"round\"/>\n    </svg>    \n);\n}\n\nexport default Cross;","import React from 'react';\nimport styles from './grid.module.css';\nimport Circle from './svgs/Circle';\nimport Cross from './svgs/Cross';\n\nconst renderSVG = svg => {\n  if(svg === 'cross'){\n    return <Cross size={40} />\n  }else if (svg === 'circle'){\n    return <Circle size={40} />\n  }else {\n    return null\n  }\n}\n\nfunction Grid(props) {\n  const divisions = props.positions.map((value, index) => {\n    const isWinningIndex = props.winningIndexes.includes(index)\n\n    return(\n      <div\n       className = {isWinningIndex ? styles.winner : null}\n       key = {index}\n       onClick = {() => {\n        props.setPositions(index)\n      }}>\n        {renderSVG(value)}\n      </div>\n    )\n  })\n  return(\n    <div className={styles.container}>\n     {divisions}\n    </div>\n  );\n}\n\nexport default Grid;","import React from 'react';\n\nfunction PlayerInfo(props){\n  const element = props.winner ? <h1>Winner: {props.winner}</h1> :   <h2>Turn: {props.turn}</h2>\n  \n  return element;\n}\n\nexport default PlayerInfo;","import React from 'react';\nimport Grid from './Grid';\nimport PlayerInfo from './PlayerInfo';\n\nfunction App(props) {\n  const [data, setdata] = React.useState({\n    winner: {\n      name: undefined,\n      indexes: []\n    },\n    turn : 'cross',\n    positions: new Array(9).fill(null)\n  })\nconsole.log(data);\n  return (\n  <>  \n  <Grid\n    winningIndexes = {data.winner.indexes}\n    positions = {data.positions}\n  setPositions = {index => {\n      setdata(prevData => {\n        if(!prevData.positions[index] && !prevData.winner.name) {\n        const data = {...prevData}\n        data.positions[index] = data.turn\n        const lines = [\n          [0,1,2],\n          [3,4,5],\n          [7,8,9],\n          [0,3,6],\n          [0,1,2],\n          [0,1,2],\n          [0,1,8],\n          [0,4,6],\n        ]\n        lines.forEach(line => {\n          const [a,b, c] = line\n          if(data.positions[a] && \n            data.positions[a] === data.positions[b] &&\n            data.positions[a] === data.positions[c]) {\n              data.winner.name = data.turn\n              data.winner.indexes = line\n            }\n        })\n        data.turn = (data.turn === 'cross') ? 'circle' : 'cross'\n        return data\n      }\n      else{\n        return prevData\n      }\n      })\n    }}\n  />\n  <PlayerInfo turn= {data.turn} winner= {data.winner.name} />\n  </>\n  )\n  }\nexport default App;","import React from \"react\";\nimport ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}